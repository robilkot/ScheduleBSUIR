<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ScheduleBSUIR.View.SettingsPage"
             x:DataType="vm:SettingsPageViewModel"
             xmlns:vm="clr-namespace:ScheduleBSUIR.Viewmodels"
             xmlns:constants="clr-namespace:ScheduleBSUIR.Helpers.Constants"
             xmlns:Converters="clr-namespace:ScheduleBSUIR.Helpers.Converters"
             xmlns:dx="http://schemas.devexpress.com/maui"
             xmlns:mtk="clr-namespace:MemoryToolkit.Maui;assembly=MemoryToolkit.Maui"
             mtk:LeakMonitorBehavior.Cascade="True"
             xmlns:templateSelectors="clr-namespace:ScheduleBSUIR.Helpers.TemplateSelectors"
             mtk:TearDownBehavior.Cascade="True"
             Shell.NavBarIsVisible="False"
             Title="SettingsPage">

    <ScrollView
        Background="{StaticResource PageBackgroundBrush}">
        <VerticalStackLayout
            Padding="15,15,15,50"
            Spacing="20">

            <Grid
                Padding="0,85,0,20">
                <Label
                    Style="{StaticResource LabelHeaderStyle}"
                    Text="Настройки"/>
            </Grid>

            <!-- Examples -->
            <!--<Label
                Text="Как выглядит расписание"
                Margin="25,0,0,-10"
                Style="{StaticResource LabelBodySecondaryStyle}"/>-->

            <dx:DXStackLayout
                ItemSpacing="5"
                ItemsSource="{Binding ExampleItems}"
                ItemTemplateSelector="{StaticResource LessonTemplateSelector}">

                <dx:DXStackLayout.Resources>
                    <ResourceDictionary>
                        <templateSelectors:TimetableItemTemplateSelector
                            ActiveScheduleTemplate="{StaticResource ActiveLessonTemplate}"
                            InactiveScheduleTemplate="{StaticResource InactiveLessonTemplate}"
                            ActiveScheduleDayTemplate="{StaticResource ActiveHeaderTemplate}"
                            InactiveScheduleDayTemplate="{StaticResource InactiveHeaderTemplate}"
                            ActiveAnnouncementTemplate="{StaticResource ActiveAnnouncementTemplate}"
                            InactiveAnnouncementTemplate="{StaticResource InactiveAnnouncementTemplate}"
                            x:Key="LessonTemplateSelector"/>
                    </ResourceDictionary>
                </dx:DXStackLayout.Resources>
            </dx:DXStackLayout>

            <!-- Color -->
            <Label
                Text="Цвета"
                Margin="15,0,0,-10"
                Style="{StaticResource LabelBodySecondaryStyle}"/>

            <Border
                Background="{StaticResource ControlBackgroundBrush}">
                <dx:DXCollectionView
                    AllowCascadeUpdate="False"
                    UseRippleEffect="True"
                    ReduceSizeToContent="True"
                    ItemSeparatorColor="{AppThemeBinding Dark={StaticResource DarkSeparatorColor}, Light={StaticResource LightSeparatorColor}}"
                    ItemSeparatorThickness="1"
                    ItemsSource="{x:Static constants:LessonTypesHelper.BasicTypes}">
                    <dx:DXCollectionView.Resources>
                        <ResourceDictionary>
                            <Converters:KeyToColorPreferenceConverter
                                x:Key="KeyToColorPreferenceConverter"/>
                        </ResourceDictionary>
                    </dx:DXCollectionView.Resources>
                    <dx:DXCollectionView.ItemTemplate>
                        <DataTemplate
                            x:DataType="constants:LessonType">
                            <Grid
                                Margin="15,0"
                                x:Name="lessonTypePlank"
                                HeightRequest="50"
                                ColumnSpacing="5"
                                ColumnDefinitions="auto,*,auto,auto">

                                <Label
                                    Grid.Column="0"
                                    VerticalOptions="Center"
                                    MaxLines="2"
                                    Text="{Binding Fullname, Mode=OneTime}"
                                    LineHeight="1.1"
                                    LineBreakMode="WordWrap"
                                    Style="{StaticResource LabelBodyPrimaryStyle}"/>

                                <Border
                                    Grid.Column="2"
                                    WidthRequest="20"
                                    HeightRequest="20"
                                    StrokeShape="RoundRectangle 8"
                                    Background="{Binding ColorPreferenceKey, Converter={StaticResource KeyToColorPreferenceConverter}}"/>

                                <Image
                                    Grid.Column="3"
                                    HeightRequest="16"
                                    Opacity="0.5"
                                    Rotation="90"
                                    Source="{AppThemeBinding Dark=dark_arrow_right, Light=light_arrow_right}">
                                </Image>

                                <Grid.GestureRecognizers>
                                    <TapGestureRecognizer
                                        Tapped="ColorPlank_Tapped"/>
                                </Grid.GestureRecognizers>
                            </Grid>
                        </DataTemplate>
                    </dx:DXCollectionView.ItemTemplate>
                </dx:DXCollectionView>
            </Border>

            <!-- Color selection popup-->
            <dx:DXPopup
                Opened="ColorPickerPopup_ChangingState"
                Closed="ColorPickerPopup_ChangingState"
                Background="{StaticResource ControlBackgroundBrush}"
                AllowShadow="True"
                ShadowColor="#55000000"
                ShadowRadius="40"
                ShadowVerticalOffset="10"
                x:Name="colorPickerPopup">
                <Border
                    Padding="15">
                    <dx:DXColorSelector
                        x:Name="colorSelector"
                        HorizontalOptions="Center"
                        SelectedColorChanged="DXColorSelector_SelectedColorChanged"
                        ItemsSource="{x:Static constants:ColorsHelper.AvailableColors}"/>
                </Border>
            </dx:DXPopup>

            <!-- App info -->
            <Label
                Text="О приложении"
                Margin="15,0,0,-10"
                Style="{StaticResource LabelBodySecondaryStyle}"/>

            <Border
                Padding="15"
                Background="{StaticResource ControlBackgroundBrush}">
                <VerticalStackLayout
                    Spacing="20">

                    <Grid>                        <Label							Grid.Column="0"							Style="{StaticResource LabelBodyPrimaryStyle}"							Text="Версия"/>                        <Label							Grid.Column="1"							HorizontalTextAlignment="End"							Style="{StaticResource LabelBodySecondaryStyle}"							Text="{Binding Source={x:Static constants:ApplicationConstants.CurrentVersion}}"/>                    </Grid>

                    <Grid>                        <Label					        Grid.Column="0"					        Style="{StaticResource LabelBodyPrimaryStyle}"					        Text="Проект на GitHub"/>                        <Label					        Grid.Column="1"					        HorizontalTextAlignment="End"                            TextDecorations="Underline"					        Style="{StaticResource LabelBodySecondaryStyle}"					        Text="Перейти">                            <Label.GestureRecognizers>                                <TapGestureRecognizer Command="{Binding OpenGithubCommand}"/>                            </Label.GestureRecognizers>                        </Label>                    </Grid>
                </VerticalStackLayout>
            </Border>

            <Grid
                HorizontalOptions="Center"
                ColumnDefinitions="auto,auto,auto"
                ColumnSpacing="5">
                <Label
                    Grid.Column="0"
                    Text="with"
                    Style="{StaticResource LabelBodySecondaryStyle}"/>
                <Image
                    Grid.Column="1"
                    HeightRequest="18"
                    WidthRequest="18"
                    Source="active_heart"/>
                <Label
                    Grid.Column="2"
                    Text="by robilkot"
                    Style="{StaticResource LabelBodySecondaryStyle}"/>
            </Grid>

        </VerticalStackLayout>
    </ScrollView>
</ContentPage>