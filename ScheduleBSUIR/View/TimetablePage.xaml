<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ScheduleBSUIR.View.TimetablePage"
             x:DataType="vm:TimetablePageViewModel"
             xmlns:vm="clr-namespace:ScheduleBSUIR.Viewmodels"
             xmlns:model="clr-namespace:ScheduleBSUIR.Models"
             xmlns:view="clr-namespace:ScheduleBSUIR.View"
             xmlns:converters="clr-namespace:ScheduleBSUIR.Helpers.Converters"
             xmlns:constants="clr-namespace:ScheduleBSUIR.Helpers.Constants"
             xmlns:controls="clr-namespace:ScheduleBSUIR.View.Controls"
             xmlns:dx="http://schemas.devexpress.com/maui"
             xmlns:mtk="clr-namespace:MemoryToolkit.Maui;assembly=MemoryToolkit.Maui"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:templateSelectors="clr-namespace:ScheduleBSUIR.Helpers.TemplateSelectors"
             mtk:LeakMonitorBehavior.Cascade="True"
             mtk:TearDownBehavior.Cascade="True"
             Shell.NavBarIsVisible="False"
             Background="Black">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:SubgroupTypeToStringConverter
                x:Key="SubgroupTypeToStringConverter"/>
            <toolkit:BoolToObjectConverter
                x:Key="BookmarkSelected"
                TrueObject="dark_bookmark_active"
                FalseObject="dark_bookmark_inactive"/>
            <toolkit:BoolToObjectConverter
                x:Key="EnabledOpacityConverter"
                TrueObject="1"
                FalseObject="0.5"/>
            <toolkit:EnumToIntConverter 
                x:Key="EnumToIntConverter" />
            <toolkit:ListToStringConverter
                Separator=", "
                x:Key="ListToStringConverter" />
            <toolkit:VariableMultiValueConverter 
                x:Key="VariableMultiValueConverter"
                ConditionType="All"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid>
        <!-- Skeleton of timetable -->
        <dx:DXCollectionView
            IsVisible="{Binding Timetable, Converter={toolkit:IsNullConverter}}"
            ItemSpacing="5"
            IsPullToRefreshEnabled="True"
            IsRefreshing="{Binding IsLoadingMoreSchedule}"
            ItemTemplate="{StaticResource SkeletonLessonTemplate}"
            PullToRefreshCommand="{Binding GetTimetableCommand}"
            Margin="15,0">
            <dx:DXCollectionView.ItemsSource>
                <x:Array Type="{x:Type x:Int16}">
                    <x:Int16>0</x:Int16>
                    <x:Int16>0</x:Int16>
                    <x:Int16>1</x:Int16>
                    <x:Int16>1</x:Int16>
                    <x:Int16>1</x:Int16>
                    <x:Int16>2</x:Int16>
                    <x:Int16>2</x:Int16>
                </x:Array>
            </dx:DXCollectionView.ItemsSource>

            <dx:DXCollectionView.Header>
                <Grid
                    Margin="0,100,0,20"
                    RowDefinitions="auto,auto"
                    RowSpacing="10">
                    <Label
                        Grid.Column="0"
                        VerticalOptions="Center"
                        Style="{StaticResource LabelHeaderStyle}"
                        Text="{Binding TimetableId.DisplayName}"/>
                    <Border
                        Grid.Row="1"
                        WidthRequest="240"
                        HorizontalOptions="Start"
                        HeightRequest="18"
                        BackgroundColor="{StaticResource DarkLightControlBackground}"/>
                </Grid>
            </dx:DXCollectionView.Header>

            <!--<dx:DXCollectionView.GroupHeaderTemplate>
                <DataTemplate>
                    <Border
                        Grid.Row="0"
                        Margin="0,20,0,0"
                        WidthRequest="240"
                        HorizontalOptions="Start"
                        BackgroundColor="{StaticResource DarkControlBackground}"
                        HeightRequest="20"/>
                </DataTemplate>
            </dx:DXCollectionView.GroupHeaderTemplate>-->
        </dx:DXCollectionView>

        <!-- Timetable collectionview -->
        <dx:DXCollectionView
            x:Name="dayScheduleCollectionView"
            Grid.Row="1"
            ItemSpacing="5"
            Margin="15,0"
            ItemsSource="{Binding Schedule}"
            IsLoadMoreEnabled="True"
            AllowCascadeUpdate="False"
            Tap="dayScheduleCollectionView_Tap"
            IsRefreshing="{Binding IsLoadingMoreSchedule}"
            ItemTemplate="{StaticResource LessonTemplateSelector}"
            SelectionMode="None"
            LoadMoreCommand="{Binding LoadMoreScheduleCommand}">

            <dx:DXCollectionView.Resources>
                <ResourceDictionary>
                    <templateSelectors:TimetableItemTemplateSelector
                        ActiveScheduleTemplate="{StaticResource ActiveLessonTemplate}"
                        InactiveScheduleTemplate="{StaticResource InactiveLessonTemplate}"
                        ActiveScheduleDayTemplate="{StaticResource ActiveHeaderTemplate}"
                        InactiveScheduleDayTemplate="{StaticResource InactiveHeaderTemplate}"
                        ActiveAnnouncementTemplate="{StaticResource ActiveAnnouncementTemplate}"
                        InactiveAnnouncementTemplate="{StaticResource InactiveAnnouncementTemplate}"
                        x:Key="LessonTemplateSelector"/>
                </ResourceDictionary>
            </dx:DXCollectionView.Resources>

            <dx:DXCollectionView.Header>
                <controls:TimetableHeader
                    Margin="0,100,0,20"
                    Tab="{Binding SelectedTab}"
                    Timetable="{Binding Timetable}"
                    TimetableId="{Binding TimetableId}"/>
            </dx:DXCollectionView.Header>

            <!--<CollectionView.EmptyView>
                <AbsoluteLayout>
                    <Grid
                        VerticalOptions="Center"
                        AbsoluteLayout.LayoutBounds="0.5, 0.5, 250, 200"
                        AbsoluteLayout.LayoutFlags="PositionProportional"
                        Opacity="0.5"
                        RowSpacing="20"
                        RowDefinitions="auto,auto">
                        <Image
                            WidthRequest="100"
                            VerticalOptions="Center"
                            HorizontalOptions="Center"
                            Grid.Row="0"
                            Source="party"/>
                        <Label
                            Grid.Row="1"
                            HorizontalTextAlignment="Center"
                            Style="{StaticResource LabelBodyHeaderStyle}"
                            Text="Занятий больше нет"/>
                    </Grid>
                </AbsoluteLayout>
            </CollectionView.EmptyView>-->
        </dx:DXCollectionView>
        
        <!-- Navbar -->
        <Grid
            x:Name="navBar"
            ZIndex="1"
            Padding="15"
            VerticalOptions="Start"
            ColumnSpacing="10"
            ColumnDefinitions="auto,*,auto,auto">

            <Grid.Background>
                <LinearGradientBrush
                    StartPoint="0,0"
                    EndPoint="0,1">
                    <GradientStop
                        Color="#AA000000"
                        Offset="0.0" />
                    <GradientStop 
                        Color="Transparent"
                        Offset="1.0" />
                </LinearGradientBrush>
            </Grid.Background>

            <!-- Navigation button -->
            <Grid
                Grid.Column="0"
                Padding="0,10,20,10"
                WidthRequest="40"
                HeightRequest="40">
                <Image
                    Source="dark_arrow_left"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding NavigateBackCommand}"/>
                </Grid.GestureRecognizers>
            </Grid>

            <controls:CustomTabbar
                HorizontalOptions="Center"
                Grid.Column="1"
                Tab="{Binding SelectedTab, Mode=TwoWay}">
            </controls:CustomTabbar>

            <!-- Timetable mode toggle -->
            <Grid
                IsEnabled="{Binding Timetable, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                Grid.Column="2"
                Padding="10"
                Opacity="{Binding Source={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource EnabledOpacityConverter}}"
                WidthRequest="40"
                HeightRequest="40">
                <Grid
                    ColumnDefinitions="auto,auto">
                    <Label
                        Grid.Column="1"
                        IsVisible="True"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding SelectedMode, Converter={StaticResource EnumToIntConverter}}">
                        <Label.Triggers>
                            <DataTrigger
                                TargetType="Label"
                                Binding="{Binding SelectedMode, Converter={toolkit:IsEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}}"
                                Value="True">
                                <Setter
                                    Property="IsVisible"
                                    Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Image
                        Grid.Column="0"
                        Source="dark_user">
                        <Image.Triggers>
                            <DataTrigger
                                TargetType="Image"
                                Binding="{Binding SelectedMode, Converter={toolkit:IsEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}}"
                                Value="True">
                                <Setter
                                    Property="Source"
                                    Value="dark_users"/>
                            </DataTrigger>
                        </Image.Triggers>
                    </Image>
                </Grid>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding ToggleTimetableModePopupCommand}"/>
                </Grid.GestureRecognizers>
            </Grid>

            <!-- Boormark toggle -->
            <Grid
                IsEnabled="{Binding Timetable, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                Grid.Column="3"
                Opacity="{Binding Source={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource EnabledOpacityConverter}}"
                Padding="10"
                WidthRequest="40"
                HeightRequest="40">
                <Image
                    Source="{Binding Favorited, Converter={StaticResource BookmarkSelected}}"/>
                <Grid.Triggers>
                    <DataTrigger
                        TargetType="Grid"
                        Binding="{Binding Timetable}"
                        Value="{x:Null}">
                        <Setter
                            Property="IsEnabled"
                            Value="False"/>
                        <Setter
                            Property="Opacity"
                            Value="0.5"/>
                    </DataTrigger>
                </Grid.Triggers>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ToogleBookmarkCommand}"/>
                </Grid.GestureRecognizers>
            </Grid>

            <!--Timetable mode popup-->
            <dx:DXPopup
                PlacementTarget="{x:Reference navBar}"
                IsOpen="{Binding IsTimetableModePopupOpen}">
                <dx:DXPopup.Resources>
                    <ResourceDictionary>
                        <Style TargetType="Grid">
                            <Setter Property="ColumnDefinitions" Value="auto,*,auto"/>
                            <Setter Property="ColumnSpacing" Value="15"/>
                            <Setter Property="HeightRequest" Value="36"/>
                        </Style>
                    </ResourceDictionary>
                </dx:DXPopup.Resources>

                <Border
                    Padding="20,10"
                    BackgroundColor="{StaticResource DarkControlBackground}">
                    <VerticalStackLayout
                        Spacing="10">
                        <VerticalStackLayout.Resources>
                            <ResourceDictionary>
                                <Style TargetType="Image">
                                    <Setter Property="WidthRequest" Value="20"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Style>

                                <Style TargetType="Label">
                                    <Setter Property="Style" Value="{StaticResource LabelBodyPrimaryStyle}"/>
                                    <Setter Property="VerticalOptions" Value="Center"/>
                                </Style>
                            </ResourceDictionary>
                        </VerticalStackLayout.Resources>

                        <Grid>
                            <Image
                                Grid.Column="0"
                                Source="dark_user"/>
                            <Label
                                Grid.Column="1"
                                Text="{Binding Source={x:Static constants:SubgroupType.FirstSubgroup}, Converter={StaticResource SubgroupTypeToStringConverter}}"/>
                            <Image
                                Grid.Column="2"
                                Source="dark_check"
                                IsVisible="{Binding SelectedMode, Converter={toolkit:IsEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.FirstSubgroup}}"/>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding ToggleModeCommand}"
                                    CommandParameter="{x:Static constants:SubgroupType.FirstSubgroup}"/>
                            </Grid.GestureRecognizers>
                        </Grid>

                        <Grid>
                            <Image
                                Grid.Column="0"
                                Source="dark_user"/>
                            <Label
                                Grid.Column="1"
                                Text="{Binding Source={x:Static constants:SubgroupType.SecondSubgroup}, Converter={StaticResource SubgroupTypeToStringConverter}}"/>
                            <Image
                                Grid.Column="2"
                                Source="dark_check"
                                IsVisible="{Binding SelectedMode, Converter={toolkit:IsEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.SecondSubgroup}}"/>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding ToggleModeCommand}"
                                    CommandParameter="{x:Static constants:SubgroupType.SecondSubgroup}"/>
                            </Grid.GestureRecognizers>
                        </Grid>

                        <Grid>
                            <Image
                                Grid.Column="0"
                                Source="dark_users"/>
                            <Label
                                Grid.Column="1"
                                Text="{Binding Source={x:Static constants:SubgroupType.All}, Converter={StaticResource SubgroupTypeToStringConverter}}"/>
                            <Image
                                Grid.Column="2"
                                Source="dark_check"
                                IsVisible="{Binding SelectedMode, Converter={toolkit:IsEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}}"/>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding ToggleModeCommand}"
                                    CommandParameter="{x:Static constants:SubgroupType.All}"/>
                            </Grid.GestureRecognizers>
                        </Grid>

                    </VerticalStackLayout>
                </Border>
            </dx:DXPopup>
        </Grid>

        <!-- Bottom sheet with schedule details -->
        <dx:BottomSheet 
            x:Name="scheduleDetailSheet" 
            ZIndex="2"
            ShowGrabber="True" 
            AllowDismiss="True" 
            StateChanged="scheduleDetailSheet_StateChanged"
            CornerRadius="12"
            Padding="15,30"
            HalfExpandedRatio="0.5"
            BackgroundColor="{StaticResource DarkControlBackground}"
            IsModal="true"
            x:DataType="model:Schedule">

            <VerticalStackLayout
                x:Name="sheetContent"
                Spacing="20">
                <VerticalStackLayout.Resources>
                    <ResourceDictionary>
                        <Style
                            TargetType="Grid">
                            <Setter
                                Property="ColumnDefinitions"
                                Value="auto, *"/>
                            <Setter
                                Property="ColumnSpacing"
                                Value="10"/>
                        </Style>
                    </ResourceDictionary>
                </VerticalStackLayout.Resources>

                <Label
                    Margin="0,0,0,-5"
                    LineBreakMode="WordWrap"
                    Style="{StaticResource LabelBodyHeaderStyle}"
                    Text="{Binding SubjectFullName, TargetNullValue={x:Static model:LessonTypesHelper.AnnouncementAbbreviation}}"/>

                <!--Schedule details-->
                <Border
                    Padding="15"
                    BackgroundColor="{StaticResource DarkLightControlBackground}">

                    <VerticalStackLayout
                        Spacing="20">
                        <!--type-->
                        <Grid
                            IsVisible="{Binding Subject, Converter={StaticResource IsNotNullOrEmptyConverter}}">
                            <Label
                                Grid.Column="0"
                                Style="{StaticResource LabelBodyPrimaryStyle}"
                                Text="Тип"/>
                            <Label
                                Grid.Column="1"
                                HorizontalTextAlignment="End"
                                Style="{StaticResource LabelBodySecondaryStyle}"
                                Text="{Binding LessonTypeAbbrev}"/>
                        </Grid>

                        <!-- Subgroup (if not whole group) -->
                        <Grid
                            IsVisible="{Binding NumSubgroup, Converter={toolkit:IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}}">
                        <Label
                            Grid.Column="0"
                            Style="{StaticResource LabelBodyPrimaryStyle}"
                            Text="Подгруппа"/>
                            <Label
                                Grid.Column="1"
                                HorizontalTextAlignment="End"
                                Style="{StaticResource LabelBodySecondaryStyle}"
                                Text="{Binding NumSubgroup, Converter={StaticResource SubgroupTypeToStringConverter}}"/>
                        </Grid>

                        <!--date-->
                        <Grid>
                            <Label
                                Grid.Column="0"
                                Style="{StaticResource LabelBodyPrimaryStyle}"
                                Text="Дата"/>
                            <Label
                                Grid.Column="1"
                                HorizontalTextAlignment="End"
                                Style="{StaticResource LabelBodySecondaryStyle}"
                                Text="{Binding DateLesson, StringFormat='{}{0:dd MMMM yyyy г.}'}"/>
                        </Grid>

                        <!--time-->
                        <Grid>
                            <Label
                                Grid.Column="0"
                                Style="{StaticResource LabelBodyPrimaryStyle}"
                                Text="Время"/>
                            <Label
                                Grid.Column="1"
                                HorizontalTextAlignment="End"
                                Style="{StaticResource LabelBodySecondaryStyle}">
                            <Label.Text>
                                <MultiBinding
                                        StringFormat="{}{0} - {1}">
                                        <Binding
                                            Path="StartLessonTime"
                                            StringFormat="{}{0:HH:mm}"/>
                                        <Binding
                                            Path="EndLessonTime"
                                            StringFormat="{}{0:HH:mm}"/>
                                    </MultiBinding>
                            </Label.Text>
                        </Label>
                        </Grid>

                        <!--auditories-->
                        <Grid>
                        <Label
                                Grid.Column="0"
                            Style="{StaticResource LabelBodyPrimaryStyle}"
                                Text="Аудитория"/>
                            <Label
                                Grid.Column="1"
                                HorizontalTextAlignment="End"
                                Style="{StaticResource LabelBodySecondaryStyle}"
                                Text="{Binding Auditories, Converter={StaticResource ListToStringConverter}}"/>
                        </Grid>
                    </VerticalStackLayout>
                </Border>

                <!--Remarks (if present)-->
                <Label
                    IsVisible="{Binding Note, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                    Text="Примечания"
                    Margin="15,0,0,-10"
                    Style="{StaticResource LabelBodySecondaryStyle}"/>

                <Border
                    IsVisible="{Binding Note, Converter={StaticResource IsNotNullOrEmptyConverter}, Mode=OneTime}"
                    Padding="15"
                    BackgroundColor="{StaticResource DarkLightControlBackground}">
                    <Label
                        Text="{Binding Note}"
                        Style="{StaticResource LabelBodyPrimaryStyle}"/>
                </Border>

                <!-- Lecturers -->
                <Label
                    IsVisible="{Binding Employees, Converter={StaticResource IsNotNullOrEmptyConverter}, Mode=OneTime}"
                    Text="Преподаватели"
                    Margin="15,0,0,-10"
                    Style="{StaticResource LabelBodySecondaryStyle}"/>

                <Border
                    IsVisible="{Binding Employees, Converter={StaticResource IsNotNullOrEmptyConverter}, Mode=OneTime}"
                    BackgroundColor="{StaticResource DarkLightControlBackground}">

                    <VerticalStackLayout
                        Spacing="10"
                        BindableLayout.ItemsSource="{Binding Employees}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate
                                x:DataType="model:EmployeeDto">
                                <Grid
                                    ColumnSpacing="15"
                                    HeightRequest="70"
                                    Padding="15,10"
                                    ColumnDefinitions="auto,*,auto">

                                    <Image
                                        VerticalOptions="Center"
                                        Grid.Column="0"
                                        HeightRequest="50"
                                        WidthRequest="50"
                                        Aspect="AspectFill">
                                        <Image.Source>
                                            <UriImageSource
                                                Uri="{Binding PhotoLink}"
                                                CachingEnabled="True"
                                                CacheValidity="10:00:00:00"/>
                                        </Image.Source>

                                        <Image.Clip>
                                            <EllipseGeometry
                                                    Center="25,25"
                                                    RadiusX="25"
                                                    RadiusY="25"/>
                                        </Image.Clip>
                                    </Image>

                                    <!--todo: converter?-->
                                    <Label
                                        Grid.Column="1"
                                        VerticalOptions="Center"
                                        MaxLines="2"
                                        LineHeight="1.1"
                                        LineBreakMode="WordWrap"
                                        Style="{StaticResource LabelBodyPrimaryStyle}">
                                        <Label.Text>
                                            <MultiBinding
                                                StringFormat="{}{2} {0} {1}">
                                                <Binding Path="FirstName"/>
                                                <Binding Path="MiddleName"/>
                                                <Binding Path="LastName"/>
                                            </MultiBinding>
                                        </Label.Text>
                                    </Label>

                                    <Image
                                        Grid.Column="2"
                                        HeightRequest="16"
                                        Opacity="0.5"
                                        Source="dark_arrow_right"/>

                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer
                                            Tapped="employee_tapped"
                                            Command="{Binding Source={x:RelativeSource AncestorType={x:Type vm:TimetablePageViewModel}}, Path=NavigateToTimetableCommand}"
                                            CommandParameter="{Binding .}"/>
                                    </Grid.GestureRecognizers>
                                </Grid>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>

                    </VerticalStackLayout>
                </Border>

                <!-- Student groups -->
                <Label
                    Text="Группы"
                    Margin="15,0,0,-10"
                    Style="{StaticResource LabelBodySecondaryStyle}">
                    <Label.IsVisible>
                        <MultiBinding Converter="{StaticResource VariableMultiValueConverter}">
                            <Binding Path="StudentGroups" Converter="{StaticResource IsNotNullOrEmptyConverter}" Mode="OneTime"/>
                            <Binding Path="Timetable.StudentGroupDto" Source="{x:RelativeSource AncestorType={x:Type vm:TimetablePageViewModel}}" Converter="{toolkit:IsNullConverter}"/>
                        </MultiBinding>
                    </Label.IsVisible>
                </Label>

                <Border
                    BackgroundColor="{StaticResource DarkLightControlBackground}">
                    <Border.IsVisible>
                        <MultiBinding Converter="{StaticResource VariableMultiValueConverter}">
                            <Binding Path="StudentGroups" Converter="{StaticResource IsNotNullOrEmptyConverter}" Mode="OneTime"/>
                            <Binding Path="Timetable.StudentGroupDto" Source="{x:RelativeSource AncestorType={x:Type vm:TimetablePageViewModel}}" Converter="{toolkit:IsNullConverter}"/>
                        </MultiBinding>
                    </Border.IsVisible>

                    <VerticalStackLayout
                        Spacing="10"
                        BindableLayout.ItemsSource="{Binding StudentGroups}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate
                                x:DataType="model:StudentGroupDto">
                                <Grid
                                    ColumnSpacing="15"
                                    Padding="15,10"
                                    ColumnDefinitions="*,auto">

                                    <Label
                                        Grid.Column="0"
                                        VerticalOptions="Center"
                                        LineBreakMode="NoWrap"
                                        Text="{Binding Name, Mode=OneTime}"
                                        Style="{StaticResource LabelBodyPrimaryStyle}">
                                    </Label>

                                    <Image
                                        Grid.Column="1"
                                        HeightRequest="16"
                                        Opacity="0.5"
                                        Source="dark_arrow_right"/>

                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer
                                            Tapped="employee_tapped"
                                            Command="{Binding Source={x:RelativeSource AncestorType={x:Type vm:TimetablePageViewModel}}, Path=NavigateToTimetableCommand}"
                                            CommandParameter="{Binding .}"/>
                                    </Grid.GestureRecognizers>
                                </Grid>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </VerticalStackLayout>
                </Border>
                
            </VerticalStackLayout>
        </dx:BottomSheet>
    </Grid>
</ContentPage>