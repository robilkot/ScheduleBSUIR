<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:model="clr-namespace:ScheduleBSUIR.Models"
             xmlns:interfaces="clr-namespace:ScheduleBSUIR.Interfaces"
             xmlns:viewmodel="clr-namespace:ScheduleBSUIR.Viewmodels"
             xmlns:converters="clr-namespace:ScheduleBSUIR.Helpers.Converters"
             xmlns:convertersCommon="clr-namespace:ScheduleBSUIR.Helpers.Converters.Common"
             xmlns:controls="clr-namespace:ScheduleBSUIR.View.Controls"
             xmlns:templateSelectors="clr-namespace:ScheduleBSUIR.Helpers.TemplateSelectors"
             xmlns:constants="clr-namespace:ScheduleBSUIR.Helpers.Constants"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="ScheduleBSUIR.View.Templates.LessonTemplates">

    <!-- Styles with dynamic resources -->
    <Style
        TargetType="Border"
        x:Key="LectureColorStyle">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource LectureColor}"/>
    </Style>
    <Style
        TargetType="Border"
        x:Key="PracticeColorStyle">
            <Setter
            Property="BackgroundColor"
            Value="{DynamicResource PracticeColor}"/>
    </Style>
    <Style
        TargetType="Border"
        x:Key="LabColorStyle">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource LabColor}"/>
    </Style>
    <Style
        TargetType="Border"
        x:Key="ConsultColorStyle">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource ConsultColor}"/>
    </Style>
    <Style
        TargetType="Border"
        x:Key="ExamColorStyle">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource ExamColor}"/>
    </Style>
    <Style
        TargetType="Border"
        x:Key="CreditColorStyle">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource CreditColor}"/>
    </Style>
    <Style
        TargetType="Border"
        x:Key="AnnouncementColorStyle">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource AnnouncementColor}"/>
    </Style>

    <!-- Converters -->
    <convertersCommon:IEnumerableCutoffConverter
        TakeAmount="3"
        x:Key="IEnumerableCutoffConverter"/>
    <toolkit:EnumToIntConverter
        x:Key="EnumToIntConverter"/>
    <toolkit:ListToStringConverter
        Separator=", "
        x:Key="StringListToStringConverter" />
    <toolkit:IsNotEqualConverter
        x:Key="IsNotEqualConverter" />

    <!-- Avatar template -->
    <DataTemplate
        x:Key="avatarTemplate"
        x:DataType="interfaces:IAvatarDisplaying">
        <toolkit:AvatarView
            VerticalOptions="Center"
            HeightRequest="50"
            WidthRequest="50"
            CornerRadius="25"
            BorderWidth="0"
            FontAttributes="Bold"
            FontSize="16"
            BackgroundColor="{StaticResource DarkControlBackground}"
            TextColor="{StaticResource SecondaryGray}"
            Text="{Binding AvatarText, Mode=OneTime}"
            ImageSource="{Binding AvatarUrl, Mode=OneTime}">
            <toolkit:AvatarView.Shadow>
                <Shadow
                    Brush="Black"
                    Opacity="0.5"
                    Radius="20"/>
            </toolkit:AvatarView.Shadow>
        </toolkit:AvatarView>
    </DataTemplate>

    <!-- SkeletonLessonTemplate -->
    <DataTemplate
        x:Key="SkeletonLessonTemplate"
        x:DataType="model:Schedule">
        <Border
            BackgroundColor="{StaticResource DarkLightControlBackground}"
            HeightRequest="70"
            Padding="10,5">
            <Grid
                ColumnSpacing="10"
                ColumnDefinitions="*, auto">
                <Grid
                    VerticalOptions="Center"
                    Grid.Column="0"
                    RowSpacing="10"
                    RowDefinitions="auto,auto">
                    <Border
                        Grid.Row="0"
                        BackgroundColor="{StaticResource SecondaryGray}"
                        HeightRequest="16"/>
                    <Border
                        Grid.Row="1"
                        BackgroundColor="{StaticResource SecondaryGray}"
                        HeightRequest="16"/>
                </Grid>
                <Ellipse
                    Grid.Column="1"
                    BackgroundColor="{StaticResource DarkControlBackground}"
                    WidthRequest="50"
                    HeightRequest="50"/>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- ActiveLessonTemplate -->
    <DataTemplate
        x:Key="ActiveLessonTemplate"
        x:DataType="model:Schedule">
        <Border
            StrokeThickness="0"
            MinimumHeightRequest="70"
            BackgroundColor="{StaticResource DarkLightControlBackground}"
            Padding="10,5">
            <Grid
                ColumnSpacing="8"
                ColumnDefinitions="auto,8,*,auto">

                <Grid
                    Grid.Column="0"
                    VerticalOptions="Center"
                    Margin="8,0,0,0"
                    RowSpacing="2"
                    RowDefinitions="auto,auto">
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="0"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding StartLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="1"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        FontSize="13"
                        Text="{Binding EndLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                </Grid>

                <Border
                    x:Name="colorPlank"
                    Grid.Column="1"
                    HeightRequest="60"
                    StrokeShape="RoundRectangle 4"
                    StrokeThickness="0"
                    Style="{Binding ., Converter={StaticResource ScheduleToColorPlankStyleConverter}}">
                    <Grid
                        Background="Black"
                        Opacity="0.5"
                        VerticalOptions="Start"
                        HorizontalOptions="Fill">
                        <Grid.HeightRequest>
                            <MultiBinding Converter="{StaticResource ScheduleToPassedPercentageConverter}">
                                <Binding Path="." Mode="OneTime"/>
                                <Binding Source="{x:Reference colorPlank}" Path="HeightRequest"/>
                            </MultiBinding>
                        </Grid.HeightRequest>
                    </Grid>
                </Border>

                <Grid
                    Grid.Column="2"
                    VerticalOptions="Center"
                    RowDefinitions="auto,auto,auto">
                    <Grid
                        Grid.Row="0"
                        ColumnDefinitions="auto,auto,auto">
                        <Label
                            Grid.Column="0"
                            Style="{StaticResource LabelBodyHeaderStyle}"
                            Text="{Binding Subject, Mode=OneTime}">
                        </Label>
                        <Image
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                            WidthRequest="20"
                            HeightRequest="20"
                            Source="dark_user">
                        </Image>
                        <Label
                            Grid.Column="2"
                            VerticalOptions="Center"
                            IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                            Style="{StaticResource LabelBodyPrimaryStyle}"
                            Text="{Binding NumSubgroup, Converter={StaticResource EnumToIntConverter}, Mode=OneTime}">
                        </Label>
                    </Grid>
                    <Label
                        Grid.Row="1"
                        IsVisible="{Binding Auditories, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                        Style="{StaticResource LabelBodySecondaryStyle}"
                        Text="{Binding Auditories, Converter={StaticResource StringListToStringConverter}, Mode=OneTime}">
                    </Label>
                    <Label
                        Grid.Row="2"
                        IsVisible="{Binding Note, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding Note, Mode=OneTime}">
                    </Label>
                </Grid>

                <!-- Employees and groups avatars -->
                <HorizontalStackLayout
                    x:Name="employeesAvatars"
                    IsVisible="{Binding Employees, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                    Grid.Column="3"
                    Spacing="-25"
                    HorizontalOptions="End"
                    BindableLayout.ItemsSource="{Binding Employees, Mode=OneTime, Converter={StaticResource IEnumerableCutoffConverter}}"
                    BindableLayout.ItemTemplate="{StaticResource avatarTemplate}"/>
                
                <!-- Groups avatars -->
                <HorizontalStackLayout
                    MaximumWidthRequest="100"
                    IsVisible="{Binding Source={x:Reference employeesAvatars}, Path=IsVisible, Converter={toolkit:InvertedBoolConverter}}"
                    Grid.Column="3"
                    Spacing="-25"
                    HorizontalOptions="End"
                    BindableLayout.ItemsSource="{Binding StudentGroups, Mode=OneTime, Converter={StaticResource IEnumerableCutoffConverter}}"
                    BindableLayout.ItemTemplate="{StaticResource avatarTemplate}"/>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- InactiveLessonTemplate -->
    <DataTemplate
        x:Key="InactiveLessonTemplate"
        x:DataType="model:Schedule">
        <Border
            Opacity="0.35"
            StrokeDashArray="16,8"
            Stroke="White"
            StrokeThickness="1"
            HeightRequest="45"
            BackgroundColor="Transparent"
            Padding="10,5">
            <Grid
                ColumnSpacing="12"
                ColumnDefinitions="auto,5,*">

                <Grid
                    Grid.Column="0"
                    VerticalOptions="Center"
                    RowSpacing="2"
                    RowDefinitions="auto,auto">
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="0"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        FontSize="13"
                        Text="{Binding StartLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="1"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        FontSize="11"
                        Text="{Binding EndLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                </Grid>

                <Border
                    Grid.Column="1"
                    HeightRequest="30"
                    StrokeShape="RoundRectangle 2.5"
                    Style="{Binding ., Converter={StaticResource ScheduleToColorPlankStyleConverter}}">
                </Border>

                <Grid
                    Grid.Column="2"
                    ColumnDefinitions="auto,auto,auto">
                    <Label
                        Grid.Column="0"
                        VerticalOptions="Center"
                        Style="{StaticResource LabelBodyHeaderStyle}"
                        FontSize="18"
                        Text="{Binding Subject, Mode=OneTime}">
                    </Label>
                    <Image
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                        WidthRequest="20"
                        HeightRequest="20"
                        Source="dark_user">
                    </Image>
                    <Label
                        Grid.Column="2"
                        VerticalOptions="Center"
                        IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding NumSubgroup, Converter={StaticResource EnumToIntConverter}, Mode=OneTime}">
                    </Label>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- ActiveAnnouncementTemplate -->
    <DataTemplate
        x:Key="ActiveAnnouncementTemplate"
        x:DataType="model:Schedule">
        <Border
            StrokeThickness="0"
            MinimumHeightRequest="70"
            BackgroundColor="{StaticResource DarkLightControlBackground}"
            Padding="10,5">
            <Grid
                ColumnSpacing="8"
                ColumnDefinitions="auto,8,*,auto">

                <Grid
                    Grid.Column="0"
                    VerticalOptions="Center"
                    Margin="8,0,0,0"
                    RowSpacing="2"
                    RowDefinitions="auto,auto">
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="0"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding StartLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="1"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        FontSize="13"
                        Text="{Binding EndLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                </Grid>

                <Border
                    x:Name="colorPlank"
                    Grid.Column="1"
                    HeightRequest="60"
                    StrokeShape="RoundRectangle 4"
                    StrokeThickness="0"
                    Style="{Binding ., Converter={StaticResource ScheduleToColorPlankStyleConverter}}">
                    <Grid
                        Background="Black"
                        Opacity="0.5"
                        VerticalOptions="Start"
                        HorizontalOptions="Fill">
                        <Grid.HeightRequest>
                            <MultiBinding Converter="{StaticResource ScheduleToPassedPercentageConverter}">
                                <Binding Path="." Mode="OneTime"/>
                                <Binding Source="{x:Reference colorPlank}" Path="HeightRequest"/>
                            </MultiBinding>
                        </Grid.HeightRequest>
                    </Grid>
                </Border>

                <Grid
                    Grid.Column="2"
                    VerticalOptions="Center"
                    RowDefinitions="auto,auto,auto">
                    <Grid
                        Grid.Row="0"
                        ColumnDefinitions="auto,auto,auto">
                        <Label
                            Grid.Column="0"
                            Style="{StaticResource LabelBodyHeaderStyle}"
                            Text="{x:Static constants:LessonTypesHelper.AnnouncementAbbreviation}">
                        </Label>
                        <Image
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                            WidthRequest="20"
                            HeightRequest="20"
                            Source="dark_user">
                        </Image>
                        <Label
                            Grid.Column="2"
                            VerticalOptions="Center"
                            IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                            Style="{StaticResource LabelBodyPrimaryStyle}"
                            Text="{Binding NumSubgroup, Converter={StaticResource EnumToIntConverter}, Mode=OneTime}">
                        </Label>
                    </Grid>
                    <Label
                        Grid.Row="1"
                        Margin="0,0,0,5"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding Note, Mode=OneTime}">
                    </Label>
                    <Label
                        Grid.Row="2"
                        IsVisible="{Binding Auditories, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                        Style="{StaticResource LabelBodySecondaryStyle}"
                        Text="{Binding Auditories, Converter={StaticResource StringListToStringConverter}, Mode=OneTime}">
                    </Label>
                </Grid>

                <HorizontalStackLayout
                    Grid.Column="3"
                    Spacing="-25"
                    HorizontalOptions="End"
                    BindableLayout.ItemsSource="{Binding Employees, Mode=OneTime}">

                    <BindableLayout.ItemTemplate>
                        <DataTemplate
                            x:DataType="model:EmployeeDto">
                            <Image
                                VerticalOptions="Center"
                                HeightRequest="50"
                                WidthRequest="50"
                                Aspect="AspectFill">

                                <Image.Source>
                                    <UriImageSource
                                        Uri="{Binding PhotoLink, Mode=OneTime}"
                                        CachingEnabled="True"
                                        CacheValidity="10:00:00:00"/>
                                </Image.Source>

                                <Image.Clip>
                                    <EllipseGeometry
                                        Center="25,25"
                                        RadiusX="25"
                                        RadiusY="25"/>
                                </Image.Clip>

                                <Image.Shadow>
                                    <Shadow
                                        Brush="Black"
                                        Opacity="0.5"
                                        Radius="20"/>
                                </Image.Shadow>
                            </Image>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </HorizontalStackLayout>
            </Grid>
        </Border>
    </DataTemplate>

    <!-- InactiveAnnouncementTemplate -->
    <DataTemplate
        x:Key="InactiveAnnouncementTemplate"
        x:DataType="model:Schedule">
        <Border
            Opacity="0.35"
            StrokeDashArray="16,8"
            Stroke="White"
            StrokeThickness="1"
            HeightRequest="45"
            BackgroundColor="Transparent"
            Padding="10,5">
            <Grid
                ColumnSpacing="12"
                ColumnDefinitions="auto,5,*">

                <Grid
                    Grid.Column="0"
                    VerticalOptions="Center"
                    RowSpacing="2"
                    RowDefinitions="auto,auto">
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="0"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        FontSize="13"
                        Text="{Binding StartLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                    <Label
                        HorizontalOptions="End"
                        Grid.Row="1"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        FontSize="11"
                        Text="{Binding EndLessonTime, StringFormat='{}{0:HH:mm}', Mode=OneTime}">
                    </Label>
                </Grid>

                <Border
                    Grid.Column="1"
                    HeightRequest="30"
                    StrokeShape="RoundRectangle 2.5"
                    Style="{Binding ., Converter={StaticResource ScheduleToColorPlankStyleConverter}}">
                </Border>

                <Grid
                    Grid.Column="2"
                    ColumnDefinitions="auto,auto,auto">
                    <Label
                        Grid.Column="0"
                        VerticalOptions="Center"
                        Style="{StaticResource LabelBodyHeaderStyle}"
                        FontSize="18"
                        Text="{x:Static constants:LessonTypesHelper.AnnouncementAbbreviation}">
                    </Label>
                    <Image
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                        WidthRequest="20"
                        HeightRequest="20"
                        Source="dark_user">
                    </Image>
                    <Label
                        Grid.Column="2"
                        VerticalOptions="Center"
                        IsVisible="{Binding NumSubgroup, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Static constants:SubgroupType.All}, Mode=OneTime}"
                        Style="{StaticResource LabelBodyPrimaryStyle}"
                        Text="{Binding NumSubgroup, Converter={StaticResource EnumToIntConverter}, Mode=OneTime}">
                    </Label>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>